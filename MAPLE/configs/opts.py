import argparse

parser = argparse.ArgumentParser(description="A project implemented in pyTorch")

# =========================== Learning Configs ============================
parser.add_argument('--dataset_name', type=str)
parser.add_argument('--n_epoch', type=int)
parser.add_argument('-b', '--batch_size', type=int)
parser.add_argument('--test_batch_size', type=int)
parser.add_argument('--lr', type=float)
parser.add_argument('--gpu', type=str)
parser.add_argument('--snapshot_pref', type=str)
parser.add_argument('--resume', type=str, default="")
parser.add_argument('--evaluate', action='store_true')
parser.add_argument('--clip_gradient', type=float)
parser.add_argument('--loss_weights', type=float)
parser.add_argument('--contra_effi', type=float)
parser.add_argument('--start_epoch', type=int)
parser.add_argument('--model_save_path', default='/home/share2/lida/CMG/code/src/Exps/pretrain/checkpoint')
# parser.add_argument('--momentum', default=0.9, type=float, metavar='M', help='momentum')
parser.add_argument('--weight_decay', '--wd', type=float,
                    metavar='W', help='weight decay (default: 5e-4)')
parser.add_argument('--orthogonality', type=bool, default=False)
parser.add_argument('--v_for_train', type=bool, default=True)
parser.add_argument('--dtw_scale_factor', type=float, default=0.01, help='DTW loss scale factor')
parser.add_argument('--dtw_beta', type=float, default=0.0, help='DTW contrastive beta')
parser.add_argument('--dtw_ratio', type=float, default=1.0, help='DTW contrastive loss ratio')
parser.add_argument('--num_cluster', type=str, default=600)
parser.add_argument('--embedding_dim', type=int, default=256)
parser.add_argument('--n_mu', type=int, default=7)
parser.add_argument('--warmup_epoch', type=int, default=10)
parser.add_argument("--quant_noise_pq_block_size", type=int, default=8)
parser.add_argument("--video_dim", type=int, default=1536)
parser.add_argument("--cross_self_attention", type=bool, default=False)
parser.add_argument('--insertCausalSelfAttn', type=bool, default=True)
parser.add_argument('--sim', type=str, default='euclidean', choices=['euclidean', 'cosine'])
parser.add_argument('--visualization', type=bool, default=True)
parser.add_argument('--attention_dropout', type=float, default=0.1)
parser.add_argument('--activation_fn', type=str, default='gelu', choices=['relu', 'gelu', 'gelu_accurate', 'tanh', 'linear'])
parser.add_argument('--em_iter', type=int, default=5)
parser.add_argument('--char_inputs', type=bool, default=False)
parser.add_argument('--no_decoder_final_norm', type=bool, default=True)
# =========================== Display Configs ============================
parser.add_argument('--print_freq', type=int)
parser.add_argument('--save_freq', type=int)
parser.add_argument('--eval_freq', type=int)
